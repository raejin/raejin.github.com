<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[WATCH AND LEARN]]></title>
  <link href="http://raejin.github.com/atom.xml" rel="self"/>
  <link href="http://raejin.github.com/"/>
  <updated>2013-03-27T18:45:21-07:00</updated>
  <id>http://raejin.github.com/</id>
  <author>
    <name><![CDATA[Rae Liu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Blog for hackers?]]></title>
    <link href="http://raejin.github.com/blog/2013/03/27/blog-for-hackers/"/>
    <updated>2013-03-27T18:43:00-07:00</updated>
    <id>http://raejin.github.com/blog/2013/03/27/blog-for-hackers</id>
    <content type="html"><![CDATA[<p><a href="http://raejin.com" title="WATCH AND LEARN">Test a link</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">math</span>
</span><span class='line'><span class="n">inputfile</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;test&#39;</span><span class="p">,</span> <span class="s">&#39;r&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">outputfile</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">&#39;test_result&#39;</span><span class="p">,</span> <span class="s">&#39;w&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">parseCss</span><span class="p">(</span><span class="n">line</span><span class="p">):</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">char</span> <span class="ow">in</span> <span class="n">line</span><span class="p">:</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">char</span> <span class="o">==</span> <span class="s">&quot;{&quot;</span><span class="p">:</span>
</span><span class='line'>            <span class="c"># print char</span>
</span><span class='line'>            <span class="n">outputfile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&quot;{0}</span><span class="se">\n\t</span><span class="s">&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">char</span><span class="p">))</span>
</span><span class='line'>        <span class="k">elif</span> <span class="n">char</span> <span class="o">==</span> <span class="s">&quot;}&quot;</span><span class="p">:</span>
</span><span class='line'>            <span class="c"># print &quot;\n{0}&quot;.format(char)</span>
</span><span class='line'>            <span class="n">outputfile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&quot;;</span><span class="se">\n</span><span class="s">{0}</span><span class="se">\n</span><span class="s">&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">char</span><span class="p">))</span>
</span><span class='line'>        <span class="k">elif</span> <span class="n">char</span> <span class="o">==</span> <span class="s">&quot;;&quot;</span><span class="p">:</span>
</span><span class='line'>            <span class="n">outputfile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&quot;{0}</span><span class="se">\n\t</span><span class="s">&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">char</span><span class="p">))</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="c"># sys.stdout.write(char)</span>
</span><span class='line'>            <span class="n">outputfile</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">char</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">inputfile</span><span class="p">:</span>
</span><span class='line'>    <span class="n">parseCss</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">inputfile</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">test_function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">fancyVariable</span> <span class="o">=</span> <span class="kc">null</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">booleans</span> <span class="o">=</span> <span class="nb">Boolean</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">element</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;This is a test&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<div>
<noscript><pre><code></code></pre></noscript></div>




<figure class='code'><figcaption><span>Great code - time.py </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="k">print</span> <span class="s">&#39;I hate you let me test to see if there is any overflow issue out there so i have to clean up the mess in order to make things pretty&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<div>
<noscript><pre><code></code></pre></noscript></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[關於起點]]></title>
    <link href="http://raejin.github.com/blog/2013/03/13/a-new-start/"/>
    <updated>2013-03-13T00:24:00-07:00</updated>
    <id>http://raejin.github.com/blog/2013/03/13/a-new-start</id>
    <content type="html"><![CDATA[<p>我一時之間也不知道該從何寫起，有些想法在腦海裡複誦久了反而不知道怎麼好好地用文字來表達。</p>

<p>關於這個部落格，我想要將它定位成我學習寫程式的記錄，也算是為自己未來的事業開始打草稿。並不覺得我會變成怎樣出眾的人物，但我希望能夠留下些什麼，並且和我有同樣想法的人一起交流。我想要做的事情很多，但在那之前，我必須把我的草稿給打好。先把路給走好了，才能試試看可不可以飛。</p>

<p>從國小就開始接觸網路，和矽谷長大的很多孩子一樣差不多年紀。但在這邊遇到和我同年紀的學生所擁有的經驗和我不能相比，我是從一個軟體沙漠國家來矽谷取經的學生。資質也不特別聰穎，總覺得很多電腦理論的東西學得很不上手，但是能夠在這樣的地方，和一群在這邊長大的人一起經歷還在熱潮上的「矽谷傳奇」是一件很特別的事情。</p>

<p>這幾年矽谷也不再那麼囂張了，反而是舊金山南市場（SOMA）興起的創投熱正在發燒。每每去Career Fair都會看到許多正興起被看好的 Startup 正在如火如荼的招生，準備向它們下一個成長目標邁進。每天一睜開眼睛就可以搜尋到幾百個創投，他們正拿到第一筆資金開始準備找人才開始實行他們的創意。若最終仍是不成功，依然能夠帶著豐富的經驗到穩定的大公司謀求一職。總之，只要投入軟體這個產業，沒有餓不死的工程師。只有不敢衝的膽小鬼。</p>

<p>這也可能只是我看到片面的假象，我不懂的東西太多了，只能夠分享我有限的經驗和想像。就以這裡為起點來告訴自己，用一點一滴的經驗來累積我的實力，然後再來分享我拼出來的圖案。</p>

<p>如果我有機會能夠和臺灣的大學生相遇，我希望他們能夠多多看看臺灣以外不同的世界。若你是資工的，就不要讓自己委身在不會進步的公司。軟體的魔力就是人力，GitHub 就是因為有一群熱衷於分享傑作的工程師才強大，每天都有不同的軟體工具因為不同所需而誕生，就是因為擁有幾萬個工程師一起集思廣益集力而成才能讓這個產業這麼蓬勃。Crowd computing 就是這樣的道理，不需要多了不起的電腦，只需要利用幾萬台電腦一點點的運算資源，要演算出一個很複雜的物理公式也就在眨眼之間。資訊需要開放交流才有力量，封閉不但讓你賺不到錢反而是讓社會舉足不前。</p>

<p>但以我的能力我能說的事情太少了，現在我只能多看多作多學，WATCH AND LEARN</p>
]]></content>
  </entry>
  
</feed>
