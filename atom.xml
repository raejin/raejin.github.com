<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[WATCH AND LEARN]]></title>
  <link href="http://raejin.github.com/atom.xml" rel="self"/>
  <link href="http://raejin.github.com/"/>
  <updated>2013-07-29T21:57:59-07:00</updated>
  <id>http://raejin.github.com/</id>
  <author>
    <name><![CDATA[Rae Liu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[EC2 instance configuration note]]></title>
    <link href="http://raejin.github.com/blog/2013/07/29/ec2-instance-configuration-note/"/>
    <updated>2013-07-29T20:25:00-07:00</updated>
    <id>http://raejin.github.com/blog/2013/07/29/ec2-instance-configuration-note</id>
    <content type="html"><![CDATA[<p>This post is intended to document the basic configuration I do for a typical EC2 Ubuntu instance, just want to make my life easier without googling the same thing all over again.</p>

<h2>Setting up zsh</h2>

<p><a href="http://paikialog.wordpress.com/2012/02/29/install-oh-my-zsh-on-ubuntu-ec2/">source</a></p>

<ul>
<li><code>sudo apt-get install zsh</code></li>
<li><code>curl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | sudo sh</code></li>
<li><code>sudo su</code></li>
<li><code>chsh -s /bin/zsh ubuntu</code></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First month of AngularJS experience]]></title>
    <link href="http://raejin.github.com/blog/2013/07/16/first-month-of-angularjs-experience/"/>
    <updated>2013-07-16T23:29:00-07:00</updated>
    <id>http://raejin.github.com/blog/2013/07/16/first-month-of-angularjs-experience</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EC2 adventurous]]></title>
    <link href="http://raejin.github.com/blog/2013/07/01/ec2-adventurous/"/>
    <updated>2013-07-01T21:38:00-07:00</updated>
    <id>http://raejin.github.com/blog/2013/07/01/ec2-adventurous</id>
    <content type="html"><![CDATA[<p>It&#8217;s already July! Omg time flies when it comes to summer time.</p>

<p>Update: recently I&#8217;ve been very involved in my internship project. I can&#8217;t expose the detail but basically I am working with AngularJS extensively. Though I am still very far from an experienced AngularJS developer, I must say IT IS A BEAUTIFUL WEB FRONT-END FRAMEWORK.</p>

<p>Currently I am working on a project called &#8220;yolyo&#8221; (temporarily name), which is based on an open source forum Discourse. Since Discourse requires quite a bit of computing resources, I decided to use Amazon EC2 as our starting point. As I realized how important it is to configure a virtual instance, I would like to dedicate this post to document all the works I&#8217;ve put into to make things work smoothly.</p>

<p>First of all, I would like to thank BitNami providing one-click Discourse installation to deploy on EC2. Otherwise, I would&#8217;ve still struggled with all the nitty gritty deployment detail.</p>

<h2>How to deploy/update by Git</h2>

<p>This has confused me for a long while. I had been used to deploy virtually everything by drag and drop for so long. Though I&#8217;ve learnt how to use Git to do versioning, I do not know how to setup the cloud server so that I can simply do <code>git push origin master</code> to deploy the changes.</p>

<p>Although I finally figured out how to use Git to deploy remote instance, I realized this workflow doesn&#8217;t work really well with Discourse. Discourse itself already contains a git repo, so I would need to push to a remote repo and deploy the instance by pulling from this remote repo. (If anyone knows a better deployment strategy, please let me know)</p>

<h2>On remote machine</h2>

<p>create a git repo as a transition to deploy to a designated directory</p>

<ul>
<li>Copy local machine public key to the remote server (ec2 instance)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat ~/.ssh/id_rsa.pub | ssh -i ~/.ssh/amazonKey.pem ubuntu@example.com <span class="s2">&quot;cat &gt;&gt; ~/.ssh/authorized_keys&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Create and initialize a new git repo</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir website.git <span class="o">&amp;&amp;</span> <span class="nb">cd </span>website.git
</span><span class='line'><span class="nv">$ </span>git init --bare
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Configure the post-receive hook in order to put the files into desired directory</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat &gt; hooks/post-receive
</span><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'><span class="nv">GIT_WORK_TREE</span><span class="o">=</span>/home/ubuntu/website
</span><span class='line'><span class="nb">export </span>GIT_WORK_TREE
</span><span class='line'>git checkout -f
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Make the post-receive file executable</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chmod +x hooks/post-receive
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Configure <code>hooks/post-update</code> file</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># This hook does two things:</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#  1. update the &quot;info&quot; files that allow the list of references to be</span>
</span><span class='line'><span class="c">#     queries over dumb transports such as http</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c">#  2. if this repository looks like it is a non-bare repository, and</span>
</span><span class='line'><span class="c">#     the checked-out branch is pushed to, then update the working copy.</span>
</span><span class='line'><span class="c">#     This makes &quot;push&quot; function somewhat similarly to darcs and bzr.</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># To enable this hook, make this file executable by &quot;chmod +x post-update&quot;.</span>
</span><span class='line'>
</span><span class='line'>git update-server-info
</span><span class='line'>
</span><span class='line'><span class="nv">is_bare</span><span class="o">=</span><span class="k">$(</span>git config --get --bool core.bare<span class="k">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> -z <span class="s2">&quot;$is_bare&quot;</span> <span class="o">]</span>
</span><span class='line'><span class="k">then</span>
</span><span class='line'>        <span class="c"># for compatibility&#39;s sake, guess</span>
</span><span class='line'>        <span class="nv">git_dir_full</span><span class="o">=</span><span class="k">$(</span><span class="nb">cd</span> <span class="nv">$GIT_DIR</span>; <span class="nb">pwd</span><span class="k">)</span>
</span><span class='line'>        <span class="k">case</span> <span class="nv">$git_dir_full</span> in */.git<span class="o">)</span> <span class="nv">is_bare</span><span class="o">=</span><span class="nb">false</span>;; *<span class="o">)</span> <span class="nv">is_bare</span><span class="o">=</span><span class="nb">true</span>;; <span class="k">esac</span>
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'>update_wc<span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="nv">ref</span><span class="o">=</span><span class="nv">$1</span>
</span><span class='line'>        <span class="nb">echo</span> <span class="s2">&quot;Push to checked out branch $ref&quot;</span> &gt;&amp;2
</span><span class='line'>        <span class="k">if</span> <span class="o">[</span> ! -f <span class="nv">$GIT_DIR</span>/logs/HEAD <span class="o">]</span>
</span><span class='line'>        <span class="k">then</span>
</span><span class='line'><span class="k">                </span><span class="nb">echo</span> <span class="s2">&quot;E:push to non-bare repository requires a HEAD reflog&quot;</span> &gt;&amp;2
</span><span class='line'>                <span class="nb">exit </span>1
</span><span class='line'>        <span class="k">fi</span>
</span><span class='line'><span class="k">        if</span> <span class="o">(</span><span class="nb">cd</span> <span class="nv">$GIT_WORK_TREE</span>; git diff-files -q --exit-code &gt;/dev/null<span class="o">)</span>
</span><span class='line'>        <span class="k">then</span>
</span><span class='line'><span class="k">                </span><span class="nv">wc_dirty</span><span class="o">=</span>0
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'><span class="k">                </span><span class="nb">echo</span> <span class="s2">&quot;W:unstaged changes found in working copy&quot;</span> &gt;&amp;2
</span><span class='line'>                <span class="nv">wc_dirty</span><span class="o">=</span>1
</span><span class='line'>                <span class="nv">desc</span><span class="o">=</span><span class="s2">&quot;working copy&quot;</span>
</span><span class='line'>        <span class="k">fi</span>
</span><span class='line'><span class="k">        if </span>git diff-index --cached HEAD@<span class="o">{</span>1<span class="o">}</span> &gt;/dev/null
</span><span class='line'>        <span class="k">then</span>
</span><span class='line'><span class="k">                </span><span class="nv">index_dirty</span><span class="o">=</span>0
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'><span class="k">                </span><span class="nb">echo</span> <span class="s2">&quot;W:uncommitted, staged changes found&quot;</span> &gt;&amp;2
</span><span class='line'>                <span class="nv">index_dirty</span><span class="o">=</span>1
</span><span class='line'>                <span class="k">if</span> <span class="o">[</span> -n <span class="s2">&quot;$desc&quot;</span> <span class="o">]</span>
</span><span class='line'>                <span class="k">then</span>
</span><span class='line'><span class="k">                        </span><span class="nv">desc</span><span class="o">=</span><span class="s2">&quot;$desc and index&quot;</span>
</span><span class='line'>                <span class="k">else</span>
</span><span class='line'><span class="k">                        </span><span class="nv">desc</span><span class="o">=</span><span class="s2">&quot;index&quot;</span>
</span><span class='line'>                <span class="k">fi</span>
</span><span class='line'><span class="k">        fi</span>
</span><span class='line'><span class="k">        if</span> <span class="o">[</span> <span class="s2">&quot;$wc_dirty&quot;</span> -ne 0 -o <span class="s2">&quot;$index_dirty&quot;</span> -ne 0 <span class="o">]</span>
</span><span class='line'>        <span class="k">then</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Make <code>hooks/post-update</code> executible</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chmod +x post-update
</span></code></pre></td></tr></table></div></figure>


<h2>On local machine</h2>

<p>I&#8217;m lazy to explicitly write out the steps here. I will just refer to the <a href="http://stackoverflow.com/questions/225291/git-upload-pack-command-not-found-how-to-fix-this-correctly">StackOverflow page</a> that helped me solve this problem.</p>

<h2>Side note</h2>

<p>After all the above hassle I suddenly realized that I do not need any of these setup. Because I shall rely on a remote (e.q. GitHub) to host the repo, so the remote machine can easily pull from this remote repo. Though it is true that I am not currently working collaboratively with anybody else, this is a good deployment/development practice.</p>

<h3>Reference</h3>

<ul>
<li><a href="http://www.jeffhoefs.com/2012/09/setup-git-deploy-for-aws-ec2-ubuntu-instance/">Setup git deploy for AWS ec2 Ubuntu instance</a></li>
<li><a href="http://stackoverflow.com/questions/225291/git-upload-pack-command-not-found-how-to-fix-this-correctly">StackOverflow - git-upload-pack: command not found, how to fix this correctly</a></li>
<li><a href="http://alestic.com/2010/10/ec2-ssh-keys">Uploading Personal ssh Keys to Amazon EC2 </a></li>
<li><a href="http://blog.gbinghan.com/2012/05/setting-up-repo-on-amazon-ec2-for-git.html">Setting up Repo on Amazon EC2 for Git Push </a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Readings for the Summer]]></title>
    <link href="http://raejin.github.com/blog/2013/05/19/readings-for-the-summer/"/>
    <updated>2013-05-19T21:14:00-07:00</updated>
    <id>http://raejin.github.com/blog/2013/05/19/readings-for-the-summer</id>
    <content type="html"><![CDATA[<p>Hello! Summer 2013 officially started :-)</p>

<p>Today is the second day of the summer, and I feel pretty good about having a fresh start despite the fact that I did waste yesterday just to have beers with my friends. All in all, life’s good after the final exams, YAY!</p>

<p>This summer I will be working on Ruby on Sinatra, along with some light-weight front-end framework. Therefore, in order to get ready for my internship, I am setting up a reading list so that I don’t just blindly work on something without understanding the fundamentals.</p>

<p>Although I don’t think the project I will be working on requires any kind of sophisticated front-end work, I still want to learn the trendy hipster-ish front-end JavaScript frameworks like AngularJS, KnockoutJS, or EmberJS.</p>

<p>Here is the reading list of the books and the useful tutorials:</p>

<h3>Online resources</h3>

<ul>
<li><a href="http://www.youtube.com/playlist?list=PLP6DbQBkn9ymGQh2qpk9ImLHdSH5T7yw7">AngularJS video tutorial on Egghead.io</a></li>
<li><a href="http://contribute.jquery.org/style-guide/js/">JavaScript Style Guide by jQuery</a></li>
<li><a href="https://github.com/airbnb/javascript">Airbnb JavaScript Style Guide (Re-read again)</a></li>
<li><a href="http://rubysource.com/rails-development-101-rvm/">Rails Intro, Deep Dive: RVM</a></li>
<li><a href="http://www.sinatrarb.com/intro.html">Sinatra Intro</a></li>
<li><a href="http://sass-lang.com/">Sass</a></li>
<li><a href="http://haml.info/">Haml</a></li>
<li><a href="http://coffeescript.org/">CoffeeScript</a></li>
</ul>


<h3>Books reference</h3>

<ul>
<li><a href="http://shop.oreilly.com/product/0636920019664.do">Sinatra: Up and Running</a></li>
<li><a href="http://shop.oreilly.com/product/9780596517748.do">JavaScript The Good Parts</a></li>
<li><a href="http://shop.oreilly.com/product/9780596529307.do">High Performance Web Sites - Essential Knowledge for Front-End Engineers</a></li>
<li><a href="http://ruby.railstutorial.org/">Ruby on Rails Tutorial, Second Edition</a></li>
<li><a href="http://pragprog.com/book/ruby3/programming-ruby-1-9">Programming Ruby: The Pragmatic Programmers’ Guide</a></li>
</ul>


<p>So far I found Ruby very magical and pseudo-intuitive to learn, but as coming from a less-dynamic programming language, I sometimes found I am doing too much work for what should’ve been done in two lines of code. I need to practice write less code in Ruby to achieve maximum efficiency. I will continue to update this list as I found useful resources.</p>

<p>It’s already a great start, cheers Rae!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SelfControl Saves My Final Grades]]></title>
    <link href="http://raejin.github.com/blog/2013/05/15/selfcontrol-saves-my-final-grades/"/>
    <updated>2013-05-15T21:13:00-07:00</updated>
    <id>http://raejin.github.com/blog/2013/05/15/selfcontrol-saves-my-final-grades</id>
    <content type="html"><![CDATA[<p>Alright, I know the title is a bit off. I could’ve still suffered if I don’t study well enough to handle the finals. I’ve discovered a OSX application called SelfControl to prevent me from wondering on social websites occasionally for a period of time.</p>

<p><a href="http://selfcontrolapp.com/">This app</a> is really awesome if you are the kind of person like me who lacks self-discipline whenever there is a need to focus. Well, mainly the reason is I don’t really like the material and it is hard in general, so that pushed me off from being proactive about the finals.</p>

<p>Fortunately, this app is powerful enough to keep me from cracking the rules. It claims that after the rules are set, there is no way to break the rules even uninstalling the app. So there you have it! In case someone is looking for some help to get focused studying for exams.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How Long Does It Take a Noob to Master UNIX Commands?]]></title>
    <link href="http://raejin.github.com/blog/2013/04/25/how-long-does-it-take-a-noob-to-master-unix-commands/"/>
    <updated>2013-04-25T21:12:00-07:00</updated>
    <id>http://raejin.github.com/blog/2013/04/25/how-long-does-it-take-a-noob-to-master-unix-commands</id>
    <content type="html"><![CDATA[<p>This semester I am taking a self-paced UNIX class, which is a lot more fun compared to the other theoretical-ish computer courses. Sometimes I really lack motivation to learn effective UNIX commands to make my life easier. And I don’t think I’m alone, but in order to be a legit software enginner I must at least not suck at the basics.</p>

<p>Last week I ran to an UNIX tutor asking some dumb questions from the text, and I finally realized that piping is not restricted to a single input command! I wonder why it took me so long to notice this trivial fact, why!!!!????</p>

<p>Here it goes, I need to remind myself how dumb I was/am and hopefully I stay motivated to be an effective engineer.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat someFile | comm -12 - anotherFile
</span></code></pre></td></tr></table></div></figure>


<p>It’s the hyphen that makes this works beautifully! Who would have thought of using hyphen? Who?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Internship for Summer 2013]]></title>
    <link href="http://raejin.github.com/blog/2013/04/06/internship-for-summer-2013/"/>
    <updated>2013-04-06T21:11:00-07:00</updated>
    <id>http://raejin.github.com/blog/2013/04/06/internship-for-summer-2013</id>
    <content type="html"><![CDATA[<p>I have been very busy interviewing for my internship opportunities. And it went quite well despite the fact that I got a rejection from a startup. At first, I was a little bit disappointed about how I blew the second phone interview. However, I quickly resumed my confidence as I kept getting email requesting interviews. Overall, the internship recruiting experience has been positive and I’ve learned tons of tips on things like “how to make your first impression” or “bugging the recruiters you know until you get an interview”. If it wasn’t my sister who is experienced with all of this, I could’ve been still blindly submitting my not-so-impressive resume electronically.</p>

<p>So I ended up taking the offer from Autodesk. Weird right? They are well-known for AutoCAD, and lots of 3D design software suite that are widely used in different industries. But why Autodesk? The most important determinant for me is the degree of impact I would make for a job, as well as the level of experience I would learn from the developers. Also, I originally set up a list of the language or frameworks that I want to learn/master for this summer. It turns out that I am going to use Ruby on Rails as the back-end to develop the project, which is great. Because I really need to learn Ruby on Rails by practical implementation.</p>

<p>I just need to take good care of the rest of the semester and occasionally learn Ruby on Rails from time to time before the first day of my internship! Woot woot!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hex Color Picker for Mac]]></title>
    <link href="http://raejin.github.com/blog/2013/04/06/hex-color-picker-for-mac/"/>
    <updated>2013-04-06T21:08:00-07:00</updated>
    <id>http://raejin.github.com/blog/2013/04/06/hex-color-picker-for-mac</id>
    <content type="html"><![CDATA[<p>Whenever I need to decide a specific color to use, I always consult my sweet Photoshop CS6 since it runs pretty smooth on my laptop. But this is an overkill, opening up Photoshop simply for picking a color sounds so stupid and I’ve been doing this for years.</p>

<p>Luckily, I stumble upon <a href="http://yuji.wordpress.com/2010/08/01/mac-adding-hex-color-picker-to-color-picker/">this article</a> about how to configure a light-weight hex color picker app on a Mac. Although the article clearly maps out all the steps, I am still presenting it here:</p>

<ol>
<li>Download <a href="http://wafflesoftware.net/hexpicker/">Hex Color Picker</a></li>
<li>Open AppleScript Editor</li>
<li>Write the desired app name i.e. <code>ColorPicker</code></li>
<li>Save as a file with <code>.app</code> as file extension</li>
<li>Move the file <code>HexColorPicker.colorPicker</code> to <code>~/Library/ColorPickers</code></li>
</ol>


<p>Simple, elegant, no more Photoshop :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blog for hackers?]]></title>
    <link href="http://raejin.github.com/blog/2013/03/27/blog-for-hackers/"/>
    <updated>2013-03-27T18:43:00-07:00</updated>
    <id>http://raejin.github.com/blog/2013/03/27/blog-for-hackers</id>
    <content type="html"><![CDATA[<p>Why am I switching the blogging platform? It sounds like an annual routine that has been done over and over again in the blogging business. I remeber the first time I was introduced with Wordpress, awesome and highly customizable. Although it was a hassle to get things work with Wordpress, the urge to personalize my blog made me step out of my comfort zone.</p>

<p>This time is no different than the first time. The reason why I am switching is actually very silly. I&#8217;ve seen so many cool developers using Octopress to blog, and they made it look really awesome due to the fact that Octopress is easy to hack. Octopress claimed it inteded to be used by hackers only, since everything needs to be done in terminal with no exception. Its nature will potentially scare off regular users, so this makes using Octopress even cooler. Yeah, that&#8217;s why I am switching, because I want to pretend that I am a cool hacker, which I am really not.</p>

<p>Enough for my boring mumbling, let me tell you what I did in the past few hours.</p>

<ul>
<li>Replace default code syntax highlighter with my favorite <a href="https://github.com/chriskempson/tomorrow-theme">Tomorrow Night theme</a></li>
<li>Clean up the default template</li>
<li>Learn the damn markdown</li>
<li>Host on GitHub page</li>
<li>Discover <a href="https://github.com/tommy351/hexo">Hexo</a>, after I spent hours figuring out how to get things work in Octopress</li>
<li>Think about responsive design with regard to the blog</li>
</ul>


<p>This experience opens a door for me. Though I know getting this done is trivial, the process of learning will always lead to different chapters.</p>

<p>For those that would like to know <code>the syntax highlighter theme</code>, here is the demo. Notice that it does not entirely follow the syntax theming scheme in Tomorrow Night since the setup is a bit different. Also I haven&#8217;t tested out all the coloring scheme yet, this is still under-development. However, feel free to <a href="https://gist.github.com/raejin/5267644">use it and modify the .css file</a> to make it better.</p>

<figure class='code'><figcaption><span>demo.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">aTags</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="p">);</span>
</span><span class='line'><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">aTags</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">aTags</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">onclick</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">closureVar</span> <span class="o">=</span> <span class="nx">i</span><span class="p">;</span>
</span><span class='line'>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">closureVar</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<div><script src='https://gist.github.com/465698.js'></script>
<noscript><pre><code></code></pre></noscript></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[關於起點]]></title>
    <link href="http://raejin.github.com/blog/2013/03/13/a-new-start/"/>
    <updated>2013-03-13T00:24:00-07:00</updated>
    <id>http://raejin.github.com/blog/2013/03/13/a-new-start</id>
    <content type="html"><![CDATA[<p>我一時之間也不知道該從何寫起，有些想法在腦海裡複誦久了反而不知道怎麼好好地用文字來表達。</p>

<p>關於這個部落格，我想要將它定位成我學習寫程式的記錄，也算是為自己未來的事業開始打草稿。並不覺得我會變成怎樣出眾的人物，但我希望能夠留下些什麼，並且和我有同樣想法的人一起交流。我想要做的事情很多，但在那之前，我必須把我的草稿給打好。先把路給走好了，才能試試看可不可以飛。</p>

<p>從國小就開始接觸網路，和矽谷長大的很多孩子一樣差不多年紀。但在這邊遇到和我同年紀的學生所擁有的經驗和我不能相比，我是從一個軟體沙漠國家來矽谷取經的學生。資質也不特別聰穎，總覺得很多電腦理論的東西學得很不上手，但是能夠在這樣的地方，和一群在這邊長大的人一起經歷還在熱潮上的「矽谷傳奇」是一件很特別的事情。</p>

<p>這幾年矽谷也不再那麼囂張了，反而是舊金山南市場（SOMA）興起的創投熱正在發燒。每每去Career Fair都會看到許多正興起被看好的 Startup 正在如火如荼的招生，準備向它們下一個成長目標邁進。每天一睜開眼睛就可以搜尋到幾百個創投，他們正拿到第一筆資金開始準備找人才開始實行他們的創意。若最終仍是不成功，依然能夠帶著豐富的經驗到穩定的大公司謀求一職。總之，只要投入軟體這個產業，沒有餓不死的工程師。只有不敢衝的膽小鬼。</p>

<p>這也可能只是我看到片面的假象，我不懂的東西太多了，只能夠分享我有限的經驗和想像。就以這裡為起點來告訴自己，用一點一滴的經驗來累積我的實力，然後再來分享我拼出來的圖案。</p>

<p>如果我有機會能夠和臺灣的大學生相遇，我希望他們能夠多多看看臺灣以外不同的世界。若你是資工的，就不要讓自己委身在不會進步的公司。軟體的魔力就是人力，GitHub 就是因為有一群熱衷於分享傑作的工程師才強大，每天都有不同的軟體工具因為不同所需而誕生，就是因為擁有幾萬個工程師一起集思廣益集力而成才能讓這個產業這麼蓬勃。Crowd computing 就是這樣的道理，不需要多了不起的電腦，只需要利用幾萬台電腦一點點的運算資源，要演算出一個很複雜的物理公式也就在眨眼之間。資訊需要<a href="http://g0v.tw/">開放交流</a>才有力量，<a href="http://mmdays.com/2012/11/15/%E5%92%8C%E4%BA%BA%E6%B0%91%E5%81%9A%E6%9C%8B%E5%8F%8B%E7%9C%9F%E7%9A%84%E9%80%99%E9%BA%BC%E9%9B%A3%EF%BC%9F%E6%B0%91%E9%96%93%E5%AF%A6%E5%83%B9%E7%99%BB%E9%8C%84%E7%B6%B2%E7%9A%84%E5%93%80%E6%AD%8C/">封閉</a>不但讓你賺不到錢反而是讓社會舉足不前。</p>

<p>但以我的能力我能說的事情太少了，現在我只能多看多作多學，WATCH AND LEARN</p>
]]></content>
  </entry>
  
</feed>
